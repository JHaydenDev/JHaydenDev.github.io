{"version":3,"sources":["Components/Body/Projects/PortfolioPage.png","Components/Body/Projects/DevDeskQ.png","Components/Body/Projects/DungeonHelper.png","Components/Body/Home/AboutMePic.jpg","Background.jpg","Components/Header/Header.js","Components/Body/Contact/ContactBox.js","Components/Body/Contact/Contact.js","Components/Body/Projects/CardContainer.js","Components/Body/Projects/Cards.js","Components/Body/Projects/Projects.js","Components/Body/Home/Home.js","Components/Body/Body.js","Components/Footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","TitleWrapper","styled","div","Title","h1","Header","Component","GOOGLE_FORM_MESSAGE_ID","GOOGLE_FORM_EMAIL_ID","CORS_PROXY","GOOGLE_FORM_ACTION","ContactBox","props","handleChange","event","setState","target","name","value","handleSubmit","preventDefault","sendingMessage","sendMessage","handleFormToggle","prevState","showForm","handleReturnButton","messageSent","messageError","formData","FormData","append","state","message","email","axios","post","then","catch","returnButton","id","className","onClick","this","Fragment","onSubmit","htmlFor","type","onChange","required","rows","Wrapper","Contact","CardBox","ImageBox","Image","img","TextBox","LinkBox","StyledLink","a","CardContainer","console","log","src","project","image","alt","heading","description","href","github","hosted","ProjectBox","Card","projects","map","key","Math","random","Date","now","Projects","PortfolioPageImg","DevDeskQImg","DungeonHelperImg","AboutPicture","AboutMePic","Home","Link","LinkWrapper","Body","to","path","exact","component","ContactInfo","SocialFollow","SocialIcon","Footer","icon","faGithub","size","faTwitter","faLinkedin","BackgroundLayer","BackgroundImg","AppWrapper","App","basename","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0832f371.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/PortfolioPage.6a1e5fe0.png\";","module.exports = __webpack_public_path__ + \"static/media/DevDeskQ.e76c4abc.png\";","module.exports = __webpack_public_path__ + \"static/media/DungeonHelper.c6aff72d.png\";","module.exports = __webpack_public_path__ + \"static/media/AboutMePic.7a52e70a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Background.d90a2d9c.jpg\";","import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\n\r\nconst TitleWrapper = styled.div`\r\n`;\r\n\r\nconst Title = styled.h1`\r\nfont-size: -webkit-xxx-large;\r\n  padding-top:4%;\r\n  margin:0;\r\n  background: rgb(0, 0, 0); /* The Fallback */\r\n  background: rgba(0, 0, 0, 0.5);\r\n  @media (max-width: 400px) {\r\n    font-size: xx-large;\r\n  }\r\n`;\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    return (\r\n      <TitleWrapper>\r\n        <Title>Hayden Development</Title>\r\n      </TitleWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\n\r\nconst GOOGLE_FORM_MESSAGE_ID = \"entry.839337160\";\r\nconst GOOGLE_FORM_EMAIL_ID = \"entry.1045781291\";\r\nconst CORS_PROXY = \"https://cors-anywhere.herokuapp.com/\";\r\nconst GOOGLE_FORM_ACTION =\r\n  \"https://docs.google.com/forms/u/1/d/e/1FAIpQLScu94WMCzap_LGPhAFEu2Sib8SivvL5-QWmHN2nTOD-SSz6Ug/formResponse\";\r\n\r\nclass ContactBox extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      message: \"\",\r\n      email: \"\",\r\n      showForm: false,\r\n      sendingMessage: false,\r\n      messageSent: false,\r\n      messageError: false\r\n    };\r\n  }\r\n\r\n  handleChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    this.setState({\r\n      sendingMessage: true\r\n    });\r\n    this.sendMessage();\r\n  };\r\n\r\n  handleFormToggle = () => {\r\n    this.setState(prevState => {\r\n      const { showForm } = prevState;\r\n      return {\r\n        showForm: !showForm\r\n      };\r\n    });\r\n  };\r\n\r\n  handleReturnButton = () => {\r\n    this.setState({\r\n      showForm: false,\r\n      messageSent: false,\r\n      messageError: false\r\n    });\r\n  };\r\n\r\n  sendMessage = () => {\r\n    const formData = new FormData();\r\n    formData.append(GOOGLE_FORM_MESSAGE_ID, this.state.message);\r\n    formData.append(GOOGLE_FORM_EMAIL_ID, this.state.email);\r\n\r\n    axios\r\n      .post(CORS_PROXY + GOOGLE_FORM_ACTION, formData)\r\n      .then(() => {\r\n        this.setState({\r\n          messageSent: true,\r\n          sendingMessage: false,\r\n          message: \"\",\r\n          email: \"\"\r\n        });\r\n      })\r\n      .catch(() => {\r\n        this.setState({\r\n          messageError: true,\r\n          sendingMessage: false\r\n        });\r\n      });\r\n  };\r\n\r\n  returnButton = () => (\r\n    <button\r\n      id=\"return-button\"\r\n      className=\"btn btn-default btn-xs\"\r\n      onClick={this.handleReturnButton}\r\n    >\r\n      Return\r\n    </button>\r\n  );\r\n\r\n  render() {\r\n    if (this.state.sendingMessage) {\r\n      return <div>Sending...</div>;\r\n    }\r\n\r\n    if (this.state.messageSent) {\r\n      return (\r\n        <React.Fragment>\r\n          <div className=\"success-message\">Sent! I will respond ASAP!</div>\r\n          {this.returnButton()}\r\n        </React.Fragment>\r\n      );\r\n    }\r\n\r\n    if (this.state.messageError) {\r\n      return (\r\n        <React.Fragment>\r\n          <div className=\"error-message\">\r\n            Sorry, your message was not sent. Contact me at:\r\n            josephhaydendevelopment@gmail.com\r\n          </div>\r\n          {this.returnButton()}\r\n        </React.Fragment>\r\n      );\r\n    }\r\n\r\n    if (this.state.showForm === false) {\r\n      return (\r\n        <button\r\n          id=\"contact-button\"\r\n          className=\"btn btn-sm\"\r\n          onClick={this.handleFormToggle}\r\n        >\r\n          Contact\r\n        </button>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"form-container\">\r\n          <form onSubmit={this.handleSubmit}>\r\n            <div className=\"form-group row\">\r\n              <label htmlFor=\"email\" className=\"col-sm-2 col-form-label\">\r\n                Email:\r\n              </label>\r\n              <div className=\"col-sm-8\">\r\n                <input\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  id=\"email\"\r\n                  className=\"form-control\"\r\n                  value={this.state.email}\r\n                  onChange={this.handleChange}\r\n                  required\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label htmlFor=\"message\" className=\"col-sm-2 col-form-label\">\r\n                Message:\r\n              </label>\r\n              <div className=\"col-sm-8\">\r\n                <textarea\r\n                  id=\"message\"\r\n                  name=\"message\"\r\n                  className=\"form-control\"\r\n                  required\r\n                  value={this.state.message}\r\n                  onChange={this.handleChange}\r\n                  rows=\"6\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <button\r\n                type=\"button\"\r\n                id=\"cancel-button\"\r\n                className=\"btn btn-default btn-sm btn-action\"\r\n                onClick={this.handleFormToggle}\r\n              >\r\n                Cancel\r\n              </button>\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn btn-sm btn-default btn-action\"\r\n              >\r\n                Submit\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactBox;\r\n","import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport ContactBox from \"./ContactBox\";\r\n\r\nconst Wrapper = styled.div`\r\n  background: rgb(0, 0, 0); /* The Fallback */\r\n  background: rgba(0, 0, 0, 0.5);\r\n  width: 100%;\r\n  margin-top: 5%;\r\n  padding-top: 2%;\r\n  padding-bottom: 2%;\r\n  min-height: 50vh;\r\n  @media (max-width: 600px) {\r\n    flex-direction: column;\r\n    align-items: center;\r\n    width: 100%;\r\n    padding-top: 5%;\r\n    padding-bottom: 5%;\r\n  }\r\n`;\r\n\r\nclass Contact extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n\r\n     };\r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    this.sendMessage()\r\n  }\r\n\r\ny\r\n  \r\n  render() {\r\n    \r\n    return (\r\n      <Wrapper>\r\n        <ContactBox/>\r\n      </Wrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contact;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst CardBox = styled.div`\r\nwidth:30%;\r\n\r\n@media (max-width: 760px) {\r\n    width:100%\r\n  }\r\n  }\r\n`;\r\n\r\nconst ImageBox = styled.div`\r\nheight: 40%;\r\npadding:5%;\r\n  }\r\n`;\r\n\r\nconst Image = styled.img`\r\nwidth: 90%;\r\nheight: auto;\r\n  }\r\n`;\r\n\r\nconst TextBox = styled.div`\r\nheight: 40%;\r\npadding-top:5%\r\n    >p{\r\n        overflow:hidden;\r\n    }\r\n  }\r\n`;\r\n\r\nconst LinkBox = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space Around;\r\n  @media (max-width: 760px) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nconst StyledLink = styled.a`\r\n  color: white;\r\n  text-decoration: none;\r\n  margin:2%\r\n  padding: 2%;\r\n  border: 1px solid white;\r\n  width:45%;\r\n  &:hover{\r\n    border: 1px solid aqua;\r\n    color:aqua;\r\n    transition: 0.3s;\r\n    box-shadow: 0 5px 15px rgba(0,0,0,1);\r\n  }\r\n  \r\n  @media (max-width: 760px) {\r\n    width:90%;\r\n    margin: 1% auto;\r\n  }\r\n`;\r\n\r\nconst CardContainer = props => {\r\n  console.log(props);\r\n  return (\r\n    <CardBox>\r\n      <ImageBox>\r\n        <Image src={props.project.image} alt=\"\" className=\"project-thumb\" />\r\n      </ImageBox>\r\n      <TextBox>\r\n        <h3>{props.project.heading}</h3>\r\n        <p>{props.project.description}</p>\r\n      </TextBox>\r\n      <LinkBox>\r\n        <StyledLink href={props.project.github}>Code</StyledLink>\r\n        <StyledLink href={props.project.hosted}>Hosted</StyledLink>\r\n      </LinkBox>\r\n    </CardBox>\r\n  );\r\n};\r\n\r\nexport default CardContainer;\r\n","import React from \"react\";\r\nimport CardContainer from \"./CardContainer\"\r\nimport styled from \"styled-components\";\r\n\r\nconst ProjectBox = styled.div`\r\ndisplay: flex;\r\nflex-direction: row;\r\nflex-wrap: wrap;\r\njustify-content: space-around;\r\n@media (max-width: 760px) {\r\n    display:flex;\r\n    flex-direction:column;\r\n  }\r\n  }\r\n`;\r\n\r\nconst Card = props => {\r\n  return (\r\n    <ProjectBox>\r\n        {props.projects.map(project => {\r\n           return <CardContainer project = {project} key = {Math.random(Date.now())}/>\r\n        })}\r\n    </ProjectBox>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Card from \"./Cards\";\r\nimport PortfolioPageImg from \"./PortfolioPage.png\";\r\nimport DevDeskQImg from \"./DevDeskQ.png\";\r\nimport DungeonHelperImg from \"./DungeonHelper.png\";\r\n\r\nconst Wrapper = styled.div`\r\n  background: rgb(0, 0, 0); /* The Fallback */\r\n  background: rgba(0, 0, 0, 0.5);\r\n  width: 100%;\r\n  margin-top: 5%;\r\n  padding-top: 2%;\r\n  padding-bottom: 2%;\r\n  min-height: 50vh;\r\n  @media (max-width: 760px) {\r\n    flex-direction: column;\r\n    align-items: center;\r\n    width: 100%;\r\n    padding-top: 5%;\r\n    padding-bottom: 5%;\r\n  }\r\n`;\r\n\r\nclass Projects extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n\r\n      projects: [\r\n        {\r\n          image: PortfolioPageImg,\r\n          heading:\"Portfolio Page\",\r\n          description:\"This portfolio page was created using ReactJS, React Router, Styled Components, and HTML5\",\r\n          github:\"https://github.com/JHaydenDev/JHaydenDev.github.io\",\r\n          hosted:\"https://jhaydendev.github.io\",\r\n        },\r\n        {\r\n          image: DevDeskQImg,\r\n          heading:\"Dev Desk Queue\",\r\n          description: \"Dev Desk Queue is a ticketing system for Devs with CRUD functionality\",\r\n          github:\"https://github.com/JHaydenDev/Front-End\",\r\n          hosted:\"https://devdeskqueue.com\",\r\n        },\r\n        {\r\n          image: DungeonHelperImg,\r\n          heading:\"Dungeon-Helper\",\r\n          description:\"Dungeon Helper is a encounter generator for Dungeons and Dragons.\",\r\n          github:\"https://github.com/JHaydenDev/dnd-encounter-generator\",\r\n          hosted:\"https://dungeon-helper.com\",\r\n        },\r\n      ]\r\n     };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Wrapper>\r\n        <Card projects={this.state.projects} />  \r\n      </Wrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Projects;\r\n","import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport AboutMePic from \"./AboutMePic.jpg\";\r\n\r\nconst Wrapper = styled.div`\r\n  background: rgb(0, 0, 0); /* The Fallback */\r\n  background: rgba(0, 0, 0, 0.5);\r\n  width: 100%;\r\n  margin-top: 5%;\r\n  padding-top: 2%;\r\n  padding-bottom: 2%;\r\n  min-height: 50vh;\r\n  display: flex;\r\n  flex-direction: row;\r\n  @media (max-width: 760px) {\r\n    flex-direction:column;\r\n    align-items: center;\r\n    width:100%; \r\n    padding-top: 5%;\r\n    padding-bottom: 5%;\r\n  }\r\n  flex-wrap: wrap;\r\n  > p {\r\n    width: 48%;\r\n    margin: auto;\r\n    @media (max-width: 760px) {\r\n      padding-top: 5%;\r\n    }\r\n  }\r\n`;\r\n\r\nconst AboutPicture = styled.div`\r\n  margin:auto;\r\n  text-align: center;\r\n  background: url(${AboutMePic});\r\n  background-position: center;\r\n  height:46 rem;\r\n  min-height: 46vh;\r\n  background-repeat: no-repeat;\r\n  width: 48%;\r\n  background-size: 19rem;\r\n  \r\n`;\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    return (\r\n      <Wrapper>\r\n        <AboutPicture />\r\n        <p>\r\n          Hello, I'm Joseph Hayden. I am a front end developer and I am passonate\r\n          about creating software that improves the daily lives of those around\r\n          me. I like to create sites with clear cut ease of use and\r\n          responsive design.\r\n        </p>\r\n      </Wrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from \"react\";\r\nimport { Route, Link } from \"react-router-dom\";\r\nimport Contact from \"./Contact/Contact\"\r\nimport Projects from \"./Projects/Projects\";\r\nimport Home from \"./Home/Home\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledLink = styled(Link)`\r\n  color: white;\r\n  width:27%;\r\n  margin:1%;\r\n  text-decoration: none;\r\n  padding: 2%;\r\n  border: 1px solid white;\r\n  &:hover{\r\n    border: 1px solid aqua;\r\n    color:aqua;\r\n    transition: 0.3s;\r\n    box-shadow: 0 5px 15px rgba(0,0,0,1);\r\n  }\r\n  @media (max-width: 760px) {\r\n    width:80%;\r\n    margin: 1% auto;\r\n  }\r\n`;\r\n\r\nconst LinkWrapper = styled.div`\r\n  background: rgb(0, 0, 0); /* The Fallback */\r\n  background: rgba(0, 0, 0, 0.5);\r\n  width: 100%;\r\n  padding-top: 4%;\r\n  padding-bottom: 4%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-evenly;\r\n  @media (max-width: 760px) {\r\n    display:flex;\r\n    flex-direction:column;\r\n  }\r\n`;\r\n\r\nclass Body extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <LinkWrapper>\r\n          <StyledLink to=\"/\">Home</StyledLink>\r\n          <StyledLink to=\"/projects/\">Projects</StyledLink>\r\n          <StyledLink to=\"/contact/\">Contact</StyledLink>\r\n        </LinkWrapper>\r\n\r\n        <Route path=\"/\" exact component={Home} />\r\n        <Route path=\"/contact/\" component={Contact} />\r\n        <Route path=\"/projects/\" component={Projects} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Body;\r\n","import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faGithub,\r\n  faTwitter,\r\n  faLinkedin\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nconst Wrapper = styled.div`\r\n  background: rgb(0, 0, 0); /* The Fallback */\r\n  background: rgba(0, 0, 0, 0.5);\r\n  width: 100%;\r\n  margin-top: 5%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-around;\r\n  @media (max-width: 760px) {\r\n    flex-direction:column;\r\n    align-items: center;\r\n    width:100%; \r\n    padding-top: 5%;\r\n    padding-bottom: 5%;\r\n  }\r\n`;\r\n\r\n\r\nconst ContactInfo = styled.div`\r\nwidth: 45%;\r\nmargin: auto;\r\n@media (max-width: 600px) {\r\n  width:auto;\r\n`;\r\n\r\nconst SocialFollow = styled.div`\r\n  width: 45%;\r\n  margin: auto;\r\n  display: flex;\r\n  padding: 5%;\r\n  flex-wrap: wrap;\r\n  justify-content: space-around;\r\n  > div {\r\n    width: 100%;\r\n  }\r\n`;\r\nconst SocialIcon = styled.a`\r\n padding:3%;\r\n &:hover{\r\n  color:aqua;\r\n  transition: 0.3s;\r\n  box-shadow: 0 5px 15px rgba(0,0,0,1);\r\n}\r\n`;\r\n\r\nclass Footer extends Component {\r\n  render() {\r\n    return (\r\n      <Wrapper>\r\n        <ContactInfo>\r\n          <h3>Contact Info</h3>\r\n          <p>Email<br/>josephhaydendevelopment<br/>@gmail.com</p>\r\n          <p>Location<br/>Chicago, IL</p>\r\n        </ContactInfo>\r\n        <SocialFollow>\r\n          <h3>Follow me on social media!</h3>\r\n          <div>\r\n            <SocialIcon href=\"https://github.com/JHaydenDev\">\r\n              <FontAwesomeIcon icon={faGithub} size=\"3x\" />\r\n            </SocialIcon>\r\n            <SocialIcon href=\"https://twitter.com/JHaydenDev\">\r\n              <FontAwesomeIcon icon={faTwitter} size=\"3x\" />\r\n            </SocialIcon>\r\n            <SocialIcon href=\"https://www.linkedin.com/in/joseph-hayden-b30a5b126/\">\r\n              <FontAwesomeIcon icon={faLinkedin} size=\"3x\" />\r\n            </SocialIcon>\r\n          </div>\r\n        </SocialFollow>\r\n      </Wrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Header from \"./Components/Header/Header\";\nimport Body from \"./Components/Body/Body\";\nimport { HashRouter as Router } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport BackgroundImg from \"./Background.jpg\";\nimport Footer from \"./Components/Footer/Footer\";\n\nconst BackgroundLayer = styled.div`\n  text-align: center;\n  background: url(${BackgroundImg});\n  color: white;\n  min-height: 100vh;\n  background-repeat: no-repeat;\n  @media (max-width: 760px) {\n    background-size: cover;\n  }\n`;\nconst AppWrapper = styled.div`\n  width: 85%;\n  margin: auto;\n  padding-top: 3%;\n  padding-bottom: 3%;\n`;\n\nclass App extends Component {\n  render() {\n    return (\n      <BackgroundLayer>\n        <AppWrapper>\n          <Header />\n          <Router basename='/'>\n            <Body />\n          </Router>\n          <Footer />\n        </AppWrapper>\n      </BackgroundLayer>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}